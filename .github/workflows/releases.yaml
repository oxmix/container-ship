name: test build publish

on:
  push:
    tags:
      - "v*.*"

jobs:
  test:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - uses: actions/checkout@v4
      - run: cd ship && go test ./...

  set-version:
    name: Set Version Without 'v'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Set version without 'v'
        id: set_version
        run: |
          REF_NAME="${{ github.ref_name }}"
          if [[ "$REF_NAME" == v* ]]; then
            echo "version=${REF_NAME:1}" >> $GITHUB_OUTPUT
          else
            echo "version=$REF_NAME" >> $GITHUB_OUTPUT
          fi

  build-publish-ship:
    name: Build & Publish Container Ship
    needs:
      - test
      - set-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to DockerHub and GHCR
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t ${{ github.actor }}/container-ship:latest \
            -t ${{ github.actor }}/container-ship:${{ needs.set-version.outputs.version }} \
            -t ghcr.io/${{ github.actor }}/container-ship:latest \
            -t ghcr.io/${{ github.actor }}/container-ship:${{ needs.set-version.outputs.version }} \
            .

  build-publish-deployer:
    name: Build & Publish Cargo Deployer
    needs:
      - test
      - set-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to DockerHub and GHCR
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t ${{ github.actor }}/cargo-deployer:latest \
            -t ${{ github.actor }}/cargo-deployer:${{ needs.set-version.outputs.version }} \
            -t ghcr.io/${{ github.actor }}/cargo-deployer:latest \
            -t ghcr.io/${{ github.actor }}/cargo-deployer:${{ needs.set-version.outputs.version }} \
            cargo-deployer