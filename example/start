#!/usr/bin/env bash
set -e

! rm -r "$(dirname "$0")/assets" > /dev/null 2>&1
docker rm -f container-ship > /dev/null 2>&1
docker ps -qaf label=ship.deployment | xargs docker rm -f > /dev/null 2>&1

mkdir -p "$(dirname "$0")/assets/manifests"
mkdir -p "$(dirname "$0")/assets/nodes"

echo 'Rise container ship'
docker run -d --name container-ship \
  -v "$(dirname "$0")/assets":/assets \
  -p 127.0.0.1:8080:8080 \
  -p 127.0.0.1:8443:8443 \
  -e ENDPOINT=http://localhost:8080 \
  --restart always \
  --log-driver json-file \
  --log-opt max-size=32k \
oxmix/container-ship:2.0

sleep 3

curl -sSfX POST 'http://127.0.0.1:8080/internal/variables' \
  -H 'Content-Type: application/json' \
  --data-raw '{"name":"PROJECT_MAGIC_ENV","data":"some content"}' > /dev/null

echo 'Installing cargo-deployer'

RESPONSE=$(curl -s "http://127.0.0.1:8080/internal/nodes/connect")
KEY=$(echo "$RESPONSE" | grep -o '"key":"[^"]*' | sed 's/"key":"//')

curl -sk "https://127.0.0.1:8443/connection/$KEY" | sh -

node="$(find "$(dirname "$0")/assets/nodes" -type f -name "*.yaml" -exec basename {} .yaml \;)"
raw="{\"name\":\"project.redis-deployment\",\"node\":\"$node\"}"
curl -skX POST https://127.0.0.1:8443/internal/nodes/deployments --data-raw "$raw"

echo 'Add manifest example redis'
curl -kX POST https://127.0.0.1:8443/deployment --data-binary @- << 'EOF'
space: project
name: redis-deployment
containers:
  - name: redis
    from: redis:6-alpine
    environment:
      - SAMPLE_MAGIC_ENV={{PROJECT_MAGIC_ENV}}
    command: redis-server --save "" --appendonly no
EOF

echo '----------'
echo Open http://localhost:8080