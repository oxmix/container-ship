user www-data;
worker_processes auto;
worker_rlimit_nofile 200000;
include /etc/nginx/modules-enabled/*.conf;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1000;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    server_tokens off;

    server {
        listen 80;
        server_name localhost;

        # important, if this nginx behind proxy then add ips for allowed x-real-ip parsing
        set_real_ip_from 172.16.0.0/12; # or your networks
        set_real_ip_from 192.168.0.0/16;
        set_real_ip_from 10.0.0.0/8;
        real_ip_header X-Real-IP;

        access_log off;
        client_max_body_size 0;
        chunked_transfer_encoding on;

        location / {
            proxy_pass                 https://127.0.0.1:8443;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location = /check {
            internal;
            proxy_pass                      https://127.0.0.1:8443/allowRequest;
            proxy_pass_request_body         off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Real-IP      $remote_addr;
        }

        # if need for container registry
        location /v2/ {
            if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
                return 404;
            }

            allow 127.0.0.1;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            allow 10.0.0.0/8;
            deny all;

            auth_request /check;

            proxy_pass                          http://host.docker.internal:5035;
            proxy_set_header  Host              $http_host;
            proxy_set_header  X-Real-IP         $remote_addr;
            proxy_set_header  X-Forwarded-Proto $scheme;
            proxy_read_timeout                  900;
        }
    }
}